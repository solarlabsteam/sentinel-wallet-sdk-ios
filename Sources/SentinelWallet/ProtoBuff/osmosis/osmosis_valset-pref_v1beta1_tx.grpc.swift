//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: osmosis/valset-pref/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Msg defines the valset-pref modules's gRPC message service.
///
/// Usage: instantiate `Osmosis_Valsetpref_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Osmosis_Valsetpref_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Osmosis_Valsetpref_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func setValidatorSetPreference(
    _ request: Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference, Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreferenceResponse>

  func delegateToValidatorSet(
    _ request: Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet, Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSetResponse>

  func undelegateFromValidatorSet(
    _ request: Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet, Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSetResponse>

  func redelegateValidatorSet(
    _ request: Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet, Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSetResponse>

  func withdrawDelegationRewards(
    _ request: Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards, Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewardsResponse>

  func delegateBondedTokens(
    _ request: Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens, Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokensResponse>
}

extension Osmosis_Valsetpref_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "osmosis.valsetpref.v1beta1.Msg"
  }

  /// SetValidatorSetPreference creates a set of validator preference.
  /// This message will process both create + update request.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetValidatorSetPreference.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setValidatorSetPreference(
    _ request: Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference, Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreferenceResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.setValidatorSetPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetValidatorSetPreferenceInterceptors() ?? []
    )
  }

  /// DelegateToValidatorSet gets the owner, coins and delegates to a
  /// validator-set.
  ///
  /// - Parameters:
  ///   - request: Request to send to DelegateToValidatorSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func delegateToValidatorSet(
    _ request: Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet, Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSetResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.delegateToValidatorSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateToValidatorSetInterceptors() ?? []
    )
  }

  /// UndelegateFromValidatorSet gets the owner and coins and undelegates from
  /// validator-set. The unbonding logic will follow the `Undelegate` logic from
  /// the sdk.
  ///
  /// - Parameters:
  ///   - request: Request to send to UndelegateFromValidatorSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func undelegateFromValidatorSet(
    _ request: Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet, Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSetResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.undelegateFromValidatorSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndelegateFromValidatorSetInterceptors() ?? []
    )
  }

  /// RedelegateValidatorSet takes the existing validator set and redelegates to
  /// a new set.
  ///
  /// - Parameters:
  ///   - request: Request to send to RedelegateValidatorSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func redelegateValidatorSet(
    _ request: Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet, Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSetResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.redelegateValidatorSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRedelegateValidatorSetInterceptors() ?? []
    )
  }

  /// WithdrawDelegationRewards allows users to claim rewards from the
  /// validator-set.
  ///
  /// - Parameters:
  ///   - request: Request to send to WithdrawDelegationRewards.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func withdrawDelegationRewards(
    _ request: Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards, Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewardsResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.withdrawDelegationRewards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawDelegationRewardsInterceptors() ?? []
    )
  }

  /// DelegateBondedTokens allows users to break the lockup bond and delegate
  /// osmo tokens to a predefined validator-set.
  ///
  /// - Parameters:
  ///   - request: Request to send to DelegateBondedTokens.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func delegateBondedTokens(
    _ request: Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens, Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokensResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.delegateBondedTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateBondedTokensInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Osmosis_Valsetpref_V1beta1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Osmosis_Valsetpref_V1beta1_MsgNIOClient")
internal final class Osmosis_Valsetpref_V1beta1_MsgClient: Osmosis_Valsetpref_V1beta1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Osmosis_Valsetpref_V1beta1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Osmosis_Valsetpref_V1beta1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the osmosis.valsetpref.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Osmosis_Valsetpref_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Osmosis_Valsetpref_V1beta1_MsgNIOClient: Osmosis_Valsetpref_V1beta1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Osmosis_Valsetpref_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the osmosis.valsetpref.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Osmosis_Valsetpref_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the valset-pref modules's gRPC message service.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Osmosis_Valsetpref_V1beta1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Osmosis_Valsetpref_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func makeSetValidatorSetPreferenceCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference, Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreferenceResponse>

  func makeDelegateToValidatorSetCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet, Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSetResponse>

  func makeUndelegateFromValidatorSetCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet, Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSetResponse>

  func makeRedelegateValidatorSetCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet, Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSetResponse>

  func makeWithdrawDelegationRewardsCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards, Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewardsResponse>

  func makeDelegateBondedTokensCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens, Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokensResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Osmosis_Valsetpref_V1beta1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Osmosis_Valsetpref_V1beta1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Osmosis_Valsetpref_V1beta1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeSetValidatorSetPreferenceCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference, Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreferenceResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.setValidatorSetPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetValidatorSetPreferenceInterceptors() ?? []
    )
  }

  internal func makeDelegateToValidatorSetCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet, Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSetResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.delegateToValidatorSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateToValidatorSetInterceptors() ?? []
    )
  }

  internal func makeUndelegateFromValidatorSetCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet, Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSetResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.undelegateFromValidatorSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndelegateFromValidatorSetInterceptors() ?? []
    )
  }

  internal func makeRedelegateValidatorSetCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet, Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSetResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.redelegateValidatorSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRedelegateValidatorSetInterceptors() ?? []
    )
  }

  internal func makeWithdrawDelegationRewardsCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards, Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewardsResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.withdrawDelegationRewards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawDelegationRewardsInterceptors() ?? []
    )
  }

  internal func makeDelegateBondedTokensCall(
    _ request: Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens, Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokensResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.delegateBondedTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateBondedTokensInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Osmosis_Valsetpref_V1beta1_MsgAsyncClientProtocol {
  internal func setValidatorSetPreference(
    _ request: Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreferenceResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.setValidatorSetPreference.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetValidatorSetPreferenceInterceptors() ?? []
    )
  }

  internal func delegateToValidatorSet(
    _ request: Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSetResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.delegateToValidatorSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateToValidatorSetInterceptors() ?? []
    )
  }

  internal func undelegateFromValidatorSet(
    _ request: Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSetResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.undelegateFromValidatorSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndelegateFromValidatorSetInterceptors() ?? []
    )
  }

  internal func redelegateValidatorSet(
    _ request: Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSetResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.redelegateValidatorSet.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRedelegateValidatorSetInterceptors() ?? []
    )
  }

  internal func withdrawDelegationRewards(
    _ request: Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewardsResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.withdrawDelegationRewards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawDelegationRewardsInterceptors() ?? []
    )
  }

  internal func delegateBondedTokens(
    _ request: Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokensResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.delegateBondedTokens.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateBondedTokensInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Osmosis_Valsetpref_V1beta1_MsgAsyncClient: Osmosis_Valsetpref_V1beta1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Osmosis_Valsetpref_V1beta1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Osmosis_Valsetpref_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Osmosis_Valsetpref_V1beta1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'setValidatorSetPreference'.
  func makeSetValidatorSetPreferenceInterceptors() -> [ClientInterceptor<Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference, Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreferenceResponse>]

  /// - Returns: Interceptors to use when invoking 'delegateToValidatorSet'.
  func makeDelegateToValidatorSetInterceptors() -> [ClientInterceptor<Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet, Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSetResponse>]

  /// - Returns: Interceptors to use when invoking 'undelegateFromValidatorSet'.
  func makeUndelegateFromValidatorSetInterceptors() -> [ClientInterceptor<Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet, Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSetResponse>]

  /// - Returns: Interceptors to use when invoking 'redelegateValidatorSet'.
  func makeRedelegateValidatorSetInterceptors() -> [ClientInterceptor<Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet, Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSetResponse>]

  /// - Returns: Interceptors to use when invoking 'withdrawDelegationRewards'.
  func makeWithdrawDelegationRewardsInterceptors() -> [ClientInterceptor<Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards, Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewardsResponse>]

  /// - Returns: Interceptors to use when invoking 'delegateBondedTokens'.
  func makeDelegateBondedTokensInterceptors() -> [ClientInterceptor<Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens, Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokensResponse>]
}

internal enum Osmosis_Valsetpref_V1beta1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "osmosis.valsetpref.v1beta1.Msg",
    methods: [
      Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.setValidatorSetPreference,
      Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.delegateToValidatorSet,
      Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.undelegateFromValidatorSet,
      Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.redelegateValidatorSet,
      Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.withdrawDelegationRewards,
      Osmosis_Valsetpref_V1beta1_MsgClientMetadata.Methods.delegateBondedTokens,
    ]
  )

  internal enum Methods {
    internal static let setValidatorSetPreference = GRPCMethodDescriptor(
      name: "SetValidatorSetPreference",
      path: "/osmosis.valsetpref.v1beta1.Msg/SetValidatorSetPreference",
      type: GRPCCallType.unary
    )

    internal static let delegateToValidatorSet = GRPCMethodDescriptor(
      name: "DelegateToValidatorSet",
      path: "/osmosis.valsetpref.v1beta1.Msg/DelegateToValidatorSet",
      type: GRPCCallType.unary
    )

    internal static let undelegateFromValidatorSet = GRPCMethodDescriptor(
      name: "UndelegateFromValidatorSet",
      path: "/osmosis.valsetpref.v1beta1.Msg/UndelegateFromValidatorSet",
      type: GRPCCallType.unary
    )

    internal static let redelegateValidatorSet = GRPCMethodDescriptor(
      name: "RedelegateValidatorSet",
      path: "/osmosis.valsetpref.v1beta1.Msg/RedelegateValidatorSet",
      type: GRPCCallType.unary
    )

    internal static let withdrawDelegationRewards = GRPCMethodDescriptor(
      name: "WithdrawDelegationRewards",
      path: "/osmosis.valsetpref.v1beta1.Msg/WithdrawDelegationRewards",
      type: GRPCCallType.unary
    )

    internal static let delegateBondedTokens = GRPCMethodDescriptor(
      name: "DelegateBondedTokens",
      path: "/osmosis.valsetpref.v1beta1.Msg/DelegateBondedTokens",
      type: GRPCCallType.unary
    )
  }
}

/// Msg defines the valset-pref modules's gRPC message service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Osmosis_Valsetpref_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Osmosis_Valsetpref_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// SetValidatorSetPreference creates a set of validator preference.
  /// This message will process both create + update request.
  func setValidatorSetPreference(request: Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreferenceResponse>

  /// DelegateToValidatorSet gets the owner, coins and delegates to a
  /// validator-set.
  func delegateToValidatorSet(request: Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSetResponse>

  /// UndelegateFromValidatorSet gets the owner and coins and undelegates from
  /// validator-set. The unbonding logic will follow the `Undelegate` logic from
  /// the sdk.
  func undelegateFromValidatorSet(request: Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSetResponse>

  /// RedelegateValidatorSet takes the existing validator set and redelegates to
  /// a new set.
  func redelegateValidatorSet(request: Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSetResponse>

  /// WithdrawDelegationRewards allows users to claim rewards from the
  /// validator-set.
  func withdrawDelegationRewards(request: Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewardsResponse>

  /// DelegateBondedTokens allows users to break the lockup bond and delegate
  /// osmo tokens to a predefined validator-set.
  func delegateBondedTokens(request: Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokensResponse>
}

extension Osmosis_Valsetpref_V1beta1_MsgProvider {
  internal var serviceName: Substring {
    return Osmosis_Valsetpref_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "SetValidatorSetPreference":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreferenceResponse>(),
        interceptors: self.interceptors?.makeSetValidatorSetPreferenceInterceptors() ?? [],
        userFunction: self.setValidatorSetPreference(request:context:)
      )

    case "DelegateToValidatorSet":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSetResponse>(),
        interceptors: self.interceptors?.makeDelegateToValidatorSetInterceptors() ?? [],
        userFunction: self.delegateToValidatorSet(request:context:)
      )

    case "UndelegateFromValidatorSet":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSetResponse>(),
        interceptors: self.interceptors?.makeUndelegateFromValidatorSetInterceptors() ?? [],
        userFunction: self.undelegateFromValidatorSet(request:context:)
      )

    case "RedelegateValidatorSet":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSetResponse>(),
        interceptors: self.interceptors?.makeRedelegateValidatorSetInterceptors() ?? [],
        userFunction: self.redelegateValidatorSet(request:context:)
      )

    case "WithdrawDelegationRewards":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewardsResponse>(),
        interceptors: self.interceptors?.makeWithdrawDelegationRewardsInterceptors() ?? [],
        userFunction: self.withdrawDelegationRewards(request:context:)
      )

    case "DelegateBondedTokens":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokensResponse>(),
        interceptors: self.interceptors?.makeDelegateBondedTokensInterceptors() ?? [],
        userFunction: self.delegateBondedTokens(request:context:)
      )

    default:
      return nil
    }
  }
}

/// Msg defines the valset-pref modules's gRPC message service.
///
/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Osmosis_Valsetpref_V1beta1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Osmosis_Valsetpref_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// SetValidatorSetPreference creates a set of validator preference.
  /// This message will process both create + update request.
  @Sendable func setValidatorSetPreference(
    request: Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreferenceResponse

  /// DelegateToValidatorSet gets the owner, coins and delegates to a
  /// validator-set.
  @Sendable func delegateToValidatorSet(
    request: Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSetResponse

  /// UndelegateFromValidatorSet gets the owner and coins and undelegates from
  /// validator-set. The unbonding logic will follow the `Undelegate` logic from
  /// the sdk.
  @Sendable func undelegateFromValidatorSet(
    request: Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSetResponse

  /// RedelegateValidatorSet takes the existing validator set and redelegates to
  /// a new set.
  @Sendable func redelegateValidatorSet(
    request: Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSetResponse

  /// WithdrawDelegationRewards allows users to claim rewards from the
  /// validator-set.
  @Sendable func withdrawDelegationRewards(
    request: Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewardsResponse

  /// DelegateBondedTokens allows users to break the lockup bond and delegate
  /// osmo tokens to a predefined validator-set.
  @Sendable func delegateBondedTokens(
    request: Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokensResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Osmosis_Valsetpref_V1beta1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Osmosis_Valsetpref_V1beta1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Osmosis_Valsetpref_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Osmosis_Valsetpref_V1beta1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "SetValidatorSetPreference":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreferenceResponse>(),
        interceptors: self.interceptors?.makeSetValidatorSetPreferenceInterceptors() ?? [],
        wrapping: self.setValidatorSetPreference(request:context:)
      )

    case "DelegateToValidatorSet":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSetResponse>(),
        interceptors: self.interceptors?.makeDelegateToValidatorSetInterceptors() ?? [],
        wrapping: self.delegateToValidatorSet(request:context:)
      )

    case "UndelegateFromValidatorSet":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSetResponse>(),
        interceptors: self.interceptors?.makeUndelegateFromValidatorSetInterceptors() ?? [],
        wrapping: self.undelegateFromValidatorSet(request:context:)
      )

    case "RedelegateValidatorSet":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSetResponse>(),
        interceptors: self.interceptors?.makeRedelegateValidatorSetInterceptors() ?? [],
        wrapping: self.redelegateValidatorSet(request:context:)
      )

    case "WithdrawDelegationRewards":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewardsResponse>(),
        interceptors: self.interceptors?.makeWithdrawDelegationRewardsInterceptors() ?? [],
        wrapping: self.withdrawDelegationRewards(request:context:)
      )

    case "DelegateBondedTokens":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens>(),
        responseSerializer: ProtobufSerializer<Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokensResponse>(),
        interceptors: self.interceptors?.makeDelegateBondedTokensInterceptors() ?? [],
        wrapping: self.delegateBondedTokens(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Osmosis_Valsetpref_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'setValidatorSetPreference'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetValidatorSetPreferenceInterceptors() -> [ServerInterceptor<Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreference, Osmosis_Valsetpref_V1beta1_MsgSetValidatorSetPreferenceResponse>]

  /// - Returns: Interceptors to use when handling 'delegateToValidatorSet'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDelegateToValidatorSetInterceptors() -> [ServerInterceptor<Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSet, Osmosis_Valsetpref_V1beta1_MsgDelegateToValidatorSetResponse>]

  /// - Returns: Interceptors to use when handling 'undelegateFromValidatorSet'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUndelegateFromValidatorSetInterceptors() -> [ServerInterceptor<Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSet, Osmosis_Valsetpref_V1beta1_MsgUndelegateFromValidatorSetResponse>]

  /// - Returns: Interceptors to use when handling 'redelegateValidatorSet'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRedelegateValidatorSetInterceptors() -> [ServerInterceptor<Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSet, Osmosis_Valsetpref_V1beta1_MsgRedelegateValidatorSetResponse>]

  /// - Returns: Interceptors to use when handling 'withdrawDelegationRewards'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWithdrawDelegationRewardsInterceptors() -> [ServerInterceptor<Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewards, Osmosis_Valsetpref_V1beta1_MsgWithdrawDelegationRewardsResponse>]

  /// - Returns: Interceptors to use when handling 'delegateBondedTokens'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDelegateBondedTokensInterceptors() -> [ServerInterceptor<Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokens, Osmosis_Valsetpref_V1beta1_MsgDelegateBondedTokensResponse>]
}

internal enum Osmosis_Valsetpref_V1beta1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "osmosis.valsetpref.v1beta1.Msg",
    methods: [
      Osmosis_Valsetpref_V1beta1_MsgServerMetadata.Methods.setValidatorSetPreference,
      Osmosis_Valsetpref_V1beta1_MsgServerMetadata.Methods.delegateToValidatorSet,
      Osmosis_Valsetpref_V1beta1_MsgServerMetadata.Methods.undelegateFromValidatorSet,
      Osmosis_Valsetpref_V1beta1_MsgServerMetadata.Methods.redelegateValidatorSet,
      Osmosis_Valsetpref_V1beta1_MsgServerMetadata.Methods.withdrawDelegationRewards,
      Osmosis_Valsetpref_V1beta1_MsgServerMetadata.Methods.delegateBondedTokens,
    ]
  )

  internal enum Methods {
    internal static let setValidatorSetPreference = GRPCMethodDescriptor(
      name: "SetValidatorSetPreference",
      path: "/osmosis.valsetpref.v1beta1.Msg/SetValidatorSetPreference",
      type: GRPCCallType.unary
    )

    internal static let delegateToValidatorSet = GRPCMethodDescriptor(
      name: "DelegateToValidatorSet",
      path: "/osmosis.valsetpref.v1beta1.Msg/DelegateToValidatorSet",
      type: GRPCCallType.unary
    )

    internal static let undelegateFromValidatorSet = GRPCMethodDescriptor(
      name: "UndelegateFromValidatorSet",
      path: "/osmosis.valsetpref.v1beta1.Msg/UndelegateFromValidatorSet",
      type: GRPCCallType.unary
    )

    internal static let redelegateValidatorSet = GRPCMethodDescriptor(
      name: "RedelegateValidatorSet",
      path: "/osmosis.valsetpref.v1beta1.Msg/RedelegateValidatorSet",
      type: GRPCCallType.unary
    )

    internal static let withdrawDelegationRewards = GRPCMethodDescriptor(
      name: "WithdrawDelegationRewards",
      path: "/osmosis.valsetpref.v1beta1.Msg/WithdrawDelegationRewards",
      type: GRPCCallType.unary
    )

    internal static let delegateBondedTokens = GRPCMethodDescriptor(
      name: "DelegateBondedTokens",
      path: "/osmosis.valsetpref.v1beta1.Msg/DelegateBondedTokens",
      type: GRPCCallType.unary
    )
  }
}
