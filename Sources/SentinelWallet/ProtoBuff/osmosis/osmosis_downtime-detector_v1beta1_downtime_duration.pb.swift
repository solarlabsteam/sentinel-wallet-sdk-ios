// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: osmosis/downtime-detector/v1beta1/downtime_duration.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

enum Osmosis_Downtimedetector_V1beta1_Downtime: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case duration30S // = 0
  case duration1M // = 1
  case duration2M // = 2
  case duration3M // = 3
  case duration4M // = 4
  case duration5M // = 5
  case duration10M // = 6
  case duration20M // = 7
  case duration30M // = 8
  case duration40M // = 9
  case duration50M // = 10
  case duration1H // = 11
  case duration15H // = 12
  case duration2H // = 13
  case duration25H // = 14
  case duration3H // = 15
  case duration4H // = 16
  case duration5H // = 17
  case duration6H // = 18
  case duration9H // = 19
  case duration12H // = 20
  case duration18H // = 21
  case duration24H // = 22
  case duration36H // = 23
  case duration48H // = 24
  case UNRECOGNIZED(Int)

  init() {
    self = .duration30S
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .duration30S
    case 1: self = .duration1M
    case 2: self = .duration2M
    case 3: self = .duration3M
    case 4: self = .duration4M
    case 5: self = .duration5M
    case 6: self = .duration10M
    case 7: self = .duration20M
    case 8: self = .duration30M
    case 9: self = .duration40M
    case 10: self = .duration50M
    case 11: self = .duration1H
    case 12: self = .duration15H
    case 13: self = .duration2H
    case 14: self = .duration25H
    case 15: self = .duration3H
    case 16: self = .duration4H
    case 17: self = .duration5H
    case 18: self = .duration6H
    case 19: self = .duration9H
    case 20: self = .duration12H
    case 21: self = .duration18H
    case 22: self = .duration24H
    case 23: self = .duration36H
    case 24: self = .duration48H
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  var rawValue: Int {
    switch self {
    case .duration30S: return 0
    case .duration1M: return 1
    case .duration2M: return 2
    case .duration3M: return 3
    case .duration4M: return 4
    case .duration5M: return 5
    case .duration10M: return 6
    case .duration20M: return 7
    case .duration30M: return 8
    case .duration40M: return 9
    case .duration50M: return 10
    case .duration1H: return 11
    case .duration15H: return 12
    case .duration2H: return 13
    case .duration25H: return 14
    case .duration3H: return 15
    case .duration4H: return 16
    case .duration5H: return 17
    case .duration6H: return 18
    case .duration9H: return 19
    case .duration12H: return 20
    case .duration18H: return 21
    case .duration24H: return 22
    case .duration36H: return 23
    case .duration48H: return 24
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Osmosis_Downtimedetector_V1beta1_Downtime: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [Osmosis_Downtimedetector_V1beta1_Downtime] = [
    .duration30S,
    .duration1M,
    .duration2M,
    .duration3M,
    .duration4M,
    .duration5M,
    .duration10M,
    .duration20M,
    .duration30M,
    .duration40M,
    .duration50M,
    .duration1H,
    .duration15H,
    .duration2H,
    .duration25H,
    .duration3H,
    .duration4H,
    .duration5H,
    .duration6H,
    .duration9H,
    .duration12H,
    .duration18H,
    .duration24H,
    .duration36H,
    .duration48H,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension Osmosis_Downtimedetector_V1beta1_Downtime: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Osmosis_Downtimedetector_V1beta1_Downtime: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "DURATION_30S"),
    1: .same(proto: "DURATION_1M"),
    2: .same(proto: "DURATION_2M"),
    3: .same(proto: "DURATION_3M"),
    4: .same(proto: "DURATION_4M"),
    5: .same(proto: "DURATION_5M"),
    6: .same(proto: "DURATION_10M"),
    7: .same(proto: "DURATION_20M"),
    8: .same(proto: "DURATION_30M"),
    9: .same(proto: "DURATION_40M"),
    10: .same(proto: "DURATION_50M"),
    11: .same(proto: "DURATION_1H"),
    12: .same(proto: "DURATION_1_5H"),
    13: .same(proto: "DURATION_2H"),
    14: .same(proto: "DURATION_2_5H"),
    15: .same(proto: "DURATION_3H"),
    16: .same(proto: "DURATION_4H"),
    17: .same(proto: "DURATION_5H"),
    18: .same(proto: "DURATION_6H"),
    19: .same(proto: "DURATION_9H"),
    20: .same(proto: "DURATION_12H"),
    21: .same(proto: "DURATION_18H"),
    22: .same(proto: "DURATION_24H"),
    23: .same(proto: "DURATION_36H"),
    24: .same(proto: "DURATION_48H"),
  ]
}
