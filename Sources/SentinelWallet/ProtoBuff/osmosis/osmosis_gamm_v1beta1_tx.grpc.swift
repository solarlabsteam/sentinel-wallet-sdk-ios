//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: osmosis/gamm/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Osmosis_Gamm_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Osmosis_Gamm_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Osmosis_Gamm_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func joinPool(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinPool,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgJoinPool, Osmosis_Gamm_V1beta1_MsgJoinPoolResponse>

  func exitPool(
    _ request: Osmosis_Gamm_V1beta1_MsgExitPool,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgExitPool, Osmosis_Gamm_V1beta1_MsgExitPoolResponse>

  func swapExactAmountIn(
    _ request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn, Osmosis_Gamm_V1beta1_MsgSwapExactAmountInResponse>

  func swapExactAmountOut(
    _ request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut, Osmosis_Gamm_V1beta1_MsgSwapExactAmountOutResponse>

  func joinSwapExternAmountIn(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn, Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountInResponse>

  func joinSwapShareAmountOut(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut, Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOutResponse>

  func exitSwapExternAmountOut(
    _ request: Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut, Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOutResponse>

  func exitSwapShareAmountIn(
    _ request: Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn,
    callOptions: CallOptions?
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn, Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountInResponse>
}

extension Osmosis_Gamm_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "osmosis.gamm.v1beta1.Msg"
  }

  /// Unary call to JoinPool
  ///
  /// - Parameters:
  ///   - request: Request to send to JoinPool.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func joinPool(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinPool,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgJoinPool, Osmosis_Gamm_V1beta1_MsgJoinPoolResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeJoinPoolInterceptors() ?? []
    )
  }

  /// Unary call to ExitPool
  ///
  /// - Parameters:
  ///   - request: Request to send to ExitPool.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func exitPool(
    _ request: Osmosis_Gamm_V1beta1_MsgExitPool,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgExitPool, Osmosis_Gamm_V1beta1_MsgExitPoolResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExitPoolInterceptors() ?? []
    )
  }

  /// Unary call to SwapExactAmountIn
  ///
  /// - Parameters:
  ///   - request: Request to send to SwapExactAmountIn.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func swapExactAmountIn(
    _ request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn, Osmosis_Gamm_V1beta1_MsgSwapExactAmountInResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.swapExactAmountIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapExactAmountInInterceptors() ?? []
    )
  }

  /// Unary call to SwapExactAmountOut
  ///
  /// - Parameters:
  ///   - request: Request to send to SwapExactAmountOut.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func swapExactAmountOut(
    _ request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut, Osmosis_Gamm_V1beta1_MsgSwapExactAmountOutResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.swapExactAmountOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapExactAmountOutInterceptors() ?? []
    )
  }

  /// Unary call to JoinSwapExternAmountIn
  ///
  /// - Parameters:
  ///   - request: Request to send to JoinSwapExternAmountIn.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func joinSwapExternAmountIn(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn, Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountInResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinSwapExternAmountIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeJoinSwapExternAmountInInterceptors() ?? []
    )
  }

  /// Unary call to JoinSwapShareAmountOut
  ///
  /// - Parameters:
  ///   - request: Request to send to JoinSwapShareAmountOut.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func joinSwapShareAmountOut(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut, Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOutResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinSwapShareAmountOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeJoinSwapShareAmountOutInterceptors() ?? []
    )
  }

  /// Unary call to ExitSwapExternAmountOut
  ///
  /// - Parameters:
  ///   - request: Request to send to ExitSwapExternAmountOut.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func exitSwapExternAmountOut(
    _ request: Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut, Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOutResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitSwapExternAmountOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExitSwapExternAmountOutInterceptors() ?? []
    )
  }

  /// Unary call to ExitSwapShareAmountIn
  ///
  /// - Parameters:
  ///   - request: Request to send to ExitSwapShareAmountIn.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func exitSwapShareAmountIn(
    _ request: Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn, Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountInResponse> {
    return self.makeUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitSwapShareAmountIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExitSwapShareAmountInInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Osmosis_Gamm_V1beta1_MsgClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Osmosis_Gamm_V1beta1_MsgNIOClient")
internal final class Osmosis_Gamm_V1beta1_MsgClient: Osmosis_Gamm_V1beta1_MsgClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Osmosis_Gamm_V1beta1_MsgClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Osmosis_Gamm_V1beta1_MsgClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the osmosis.gamm.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Osmosis_Gamm_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Osmosis_Gamm_V1beta1_MsgNIOClient: Osmosis_Gamm_V1beta1_MsgClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Osmosis_Gamm_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the osmosis.gamm.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Osmosis_Gamm_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Osmosis_Gamm_V1beta1_MsgAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Osmosis_Gamm_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func makeJoinPoolCall(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinPool,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgJoinPool, Osmosis_Gamm_V1beta1_MsgJoinPoolResponse>

  func makeExitPoolCall(
    _ request: Osmosis_Gamm_V1beta1_MsgExitPool,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgExitPool, Osmosis_Gamm_V1beta1_MsgExitPoolResponse>

  func makeSwapExactAmountInCall(
    _ request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn, Osmosis_Gamm_V1beta1_MsgSwapExactAmountInResponse>

  func makeSwapExactAmountOutCall(
    _ request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut, Osmosis_Gamm_V1beta1_MsgSwapExactAmountOutResponse>

  func makeJoinSwapExternAmountInCall(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn, Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountInResponse>

  func makeJoinSwapShareAmountOutCall(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut, Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOutResponse>

  func makeExitSwapExternAmountOutCall(
    _ request: Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut, Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOutResponse>

  func makeExitSwapShareAmountInCall(
    _ request: Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn, Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountInResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Osmosis_Gamm_V1beta1_MsgAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Osmosis_Gamm_V1beta1_MsgClientMetadata.serviceDescriptor
  }

  internal var interceptors: Osmosis_Gamm_V1beta1_MsgClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeJoinPoolCall(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinPool,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgJoinPool, Osmosis_Gamm_V1beta1_MsgJoinPoolResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeJoinPoolInterceptors() ?? []
    )
  }

  internal func makeExitPoolCall(
    _ request: Osmosis_Gamm_V1beta1_MsgExitPool,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgExitPool, Osmosis_Gamm_V1beta1_MsgExitPoolResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExitPoolInterceptors() ?? []
    )
  }

  internal func makeSwapExactAmountInCall(
    _ request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn, Osmosis_Gamm_V1beta1_MsgSwapExactAmountInResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.swapExactAmountIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapExactAmountInInterceptors() ?? []
    )
  }

  internal func makeSwapExactAmountOutCall(
    _ request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut, Osmosis_Gamm_V1beta1_MsgSwapExactAmountOutResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.swapExactAmountOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapExactAmountOutInterceptors() ?? []
    )
  }

  internal func makeJoinSwapExternAmountInCall(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn, Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountInResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinSwapExternAmountIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeJoinSwapExternAmountInInterceptors() ?? []
    )
  }

  internal func makeJoinSwapShareAmountOutCall(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut, Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOutResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinSwapShareAmountOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeJoinSwapShareAmountOutInterceptors() ?? []
    )
  }

  internal func makeExitSwapExternAmountOutCall(
    _ request: Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut, Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOutResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitSwapExternAmountOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExitSwapExternAmountOutInterceptors() ?? []
    )
  }

  internal func makeExitSwapShareAmountInCall(
    _ request: Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn, Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountInResponse> {
    return self.makeAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitSwapShareAmountIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExitSwapShareAmountInInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Osmosis_Gamm_V1beta1_MsgAsyncClientProtocol {
  internal func joinPool(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinPool,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Gamm_V1beta1_MsgJoinPoolResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeJoinPoolInterceptors() ?? []
    )
  }

  internal func exitPool(
    _ request: Osmosis_Gamm_V1beta1_MsgExitPool,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Gamm_V1beta1_MsgExitPoolResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitPool.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExitPoolInterceptors() ?? []
    )
  }

  internal func swapExactAmountIn(
    _ request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Gamm_V1beta1_MsgSwapExactAmountInResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.swapExactAmountIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapExactAmountInInterceptors() ?? []
    )
  }

  internal func swapExactAmountOut(
    _ request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Gamm_V1beta1_MsgSwapExactAmountOutResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.swapExactAmountOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSwapExactAmountOutInterceptors() ?? []
    )
  }

  internal func joinSwapExternAmountIn(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountInResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinSwapExternAmountIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeJoinSwapExternAmountInInterceptors() ?? []
    )
  }

  internal func joinSwapShareAmountOut(
    _ request: Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOutResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinSwapShareAmountOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeJoinSwapShareAmountOutInterceptors() ?? []
    )
  }

  internal func exitSwapExternAmountOut(
    _ request: Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOutResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitSwapExternAmountOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExitSwapExternAmountOutInterceptors() ?? []
    )
  }

  internal func exitSwapShareAmountIn(
    _ request: Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn,
    callOptions: CallOptions? = nil
  ) async throws -> Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountInResponse {
    return try await self.performAsyncUnaryCall(
      path: Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitSwapShareAmountIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExitSwapShareAmountInInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Osmosis_Gamm_V1beta1_MsgAsyncClient: Osmosis_Gamm_V1beta1_MsgAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Osmosis_Gamm_V1beta1_MsgClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Osmosis_Gamm_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Osmosis_Gamm_V1beta1_MsgClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'joinPool'.
  func makeJoinPoolInterceptors() -> [ClientInterceptor<Osmosis_Gamm_V1beta1_MsgJoinPool, Osmosis_Gamm_V1beta1_MsgJoinPoolResponse>]

  /// - Returns: Interceptors to use when invoking 'exitPool'.
  func makeExitPoolInterceptors() -> [ClientInterceptor<Osmosis_Gamm_V1beta1_MsgExitPool, Osmosis_Gamm_V1beta1_MsgExitPoolResponse>]

  /// - Returns: Interceptors to use when invoking 'swapExactAmountIn'.
  func makeSwapExactAmountInInterceptors() -> [ClientInterceptor<Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn, Osmosis_Gamm_V1beta1_MsgSwapExactAmountInResponse>]

  /// - Returns: Interceptors to use when invoking 'swapExactAmountOut'.
  func makeSwapExactAmountOutInterceptors() -> [ClientInterceptor<Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut, Osmosis_Gamm_V1beta1_MsgSwapExactAmountOutResponse>]

  /// - Returns: Interceptors to use when invoking 'joinSwapExternAmountIn'.
  func makeJoinSwapExternAmountInInterceptors() -> [ClientInterceptor<Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn, Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountInResponse>]

  /// - Returns: Interceptors to use when invoking 'joinSwapShareAmountOut'.
  func makeJoinSwapShareAmountOutInterceptors() -> [ClientInterceptor<Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut, Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOutResponse>]

  /// - Returns: Interceptors to use when invoking 'exitSwapExternAmountOut'.
  func makeExitSwapExternAmountOutInterceptors() -> [ClientInterceptor<Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut, Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOutResponse>]

  /// - Returns: Interceptors to use when invoking 'exitSwapShareAmountIn'.
  func makeExitSwapShareAmountInInterceptors() -> [ClientInterceptor<Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn, Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountInResponse>]
}

internal enum Osmosis_Gamm_V1beta1_MsgClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "osmosis.gamm.v1beta1.Msg",
    methods: [
      Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinPool,
      Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitPool,
      Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.swapExactAmountIn,
      Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.swapExactAmountOut,
      Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinSwapExternAmountIn,
      Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.joinSwapShareAmountOut,
      Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitSwapExternAmountOut,
      Osmosis_Gamm_V1beta1_MsgClientMetadata.Methods.exitSwapShareAmountIn,
    ]
  )

  internal enum Methods {
    internal static let joinPool = GRPCMethodDescriptor(
      name: "JoinPool",
      path: "/osmosis.gamm.v1beta1.Msg/JoinPool",
      type: GRPCCallType.unary
    )

    internal static let exitPool = GRPCMethodDescriptor(
      name: "ExitPool",
      path: "/osmosis.gamm.v1beta1.Msg/ExitPool",
      type: GRPCCallType.unary
    )

    internal static let swapExactAmountIn = GRPCMethodDescriptor(
      name: "SwapExactAmountIn",
      path: "/osmosis.gamm.v1beta1.Msg/SwapExactAmountIn",
      type: GRPCCallType.unary
    )

    internal static let swapExactAmountOut = GRPCMethodDescriptor(
      name: "SwapExactAmountOut",
      path: "/osmosis.gamm.v1beta1.Msg/SwapExactAmountOut",
      type: GRPCCallType.unary
    )

    internal static let joinSwapExternAmountIn = GRPCMethodDescriptor(
      name: "JoinSwapExternAmountIn",
      path: "/osmosis.gamm.v1beta1.Msg/JoinSwapExternAmountIn",
      type: GRPCCallType.unary
    )

    internal static let joinSwapShareAmountOut = GRPCMethodDescriptor(
      name: "JoinSwapShareAmountOut",
      path: "/osmosis.gamm.v1beta1.Msg/JoinSwapShareAmountOut",
      type: GRPCCallType.unary
    )

    internal static let exitSwapExternAmountOut = GRPCMethodDescriptor(
      name: "ExitSwapExternAmountOut",
      path: "/osmosis.gamm.v1beta1.Msg/ExitSwapExternAmountOut",
      type: GRPCCallType.unary
    )

    internal static let exitSwapShareAmountIn = GRPCMethodDescriptor(
      name: "ExitSwapShareAmountIn",
      path: "/osmosis.gamm.v1beta1.Msg/ExitSwapShareAmountIn",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Osmosis_Gamm_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Osmosis_Gamm_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  func joinPool(request: Osmosis_Gamm_V1beta1_MsgJoinPool, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Gamm_V1beta1_MsgJoinPoolResponse>

  func exitPool(request: Osmosis_Gamm_V1beta1_MsgExitPool, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Gamm_V1beta1_MsgExitPoolResponse>

  func swapExactAmountIn(request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Gamm_V1beta1_MsgSwapExactAmountInResponse>

  func swapExactAmountOut(request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Gamm_V1beta1_MsgSwapExactAmountOutResponse>

  func joinSwapExternAmountIn(request: Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountInResponse>

  func joinSwapShareAmountOut(request: Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOutResponse>

  func exitSwapExternAmountOut(request: Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOutResponse>

  func exitSwapShareAmountIn(request: Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn, context: StatusOnlyCallContext) -> EventLoopFuture<Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountInResponse>
}

extension Osmosis_Gamm_V1beta1_MsgProvider {
  internal var serviceName: Substring {
    return Osmosis_Gamm_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "JoinPool":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgJoinPool>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgJoinPoolResponse>(),
        interceptors: self.interceptors?.makeJoinPoolInterceptors() ?? [],
        userFunction: self.joinPool(request:context:)
      )

    case "ExitPool":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgExitPool>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgExitPoolResponse>(),
        interceptors: self.interceptors?.makeExitPoolInterceptors() ?? [],
        userFunction: self.exitPool(request:context:)
      )

    case "SwapExactAmountIn":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgSwapExactAmountInResponse>(),
        interceptors: self.interceptors?.makeSwapExactAmountInInterceptors() ?? [],
        userFunction: self.swapExactAmountIn(request:context:)
      )

    case "SwapExactAmountOut":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgSwapExactAmountOutResponse>(),
        interceptors: self.interceptors?.makeSwapExactAmountOutInterceptors() ?? [],
        userFunction: self.swapExactAmountOut(request:context:)
      )

    case "JoinSwapExternAmountIn":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountInResponse>(),
        interceptors: self.interceptors?.makeJoinSwapExternAmountInInterceptors() ?? [],
        userFunction: self.joinSwapExternAmountIn(request:context:)
      )

    case "JoinSwapShareAmountOut":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOutResponse>(),
        interceptors: self.interceptors?.makeJoinSwapShareAmountOutInterceptors() ?? [],
        userFunction: self.joinSwapShareAmountOut(request:context:)
      )

    case "ExitSwapExternAmountOut":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOutResponse>(),
        interceptors: self.interceptors?.makeExitSwapExternAmountOutInterceptors() ?? [],
        userFunction: self.exitSwapExternAmountOut(request:context:)
      )

    case "ExitSwapShareAmountIn":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountInResponse>(),
        interceptors: self.interceptors?.makeExitSwapShareAmountInInterceptors() ?? [],
        userFunction: self.exitSwapShareAmountIn(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Osmosis_Gamm_V1beta1_MsgAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Osmosis_Gamm_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  @Sendable func joinPool(
    request: Osmosis_Gamm_V1beta1_MsgJoinPool,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Gamm_V1beta1_MsgJoinPoolResponse

  @Sendable func exitPool(
    request: Osmosis_Gamm_V1beta1_MsgExitPool,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Gamm_V1beta1_MsgExitPoolResponse

  @Sendable func swapExactAmountIn(
    request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Gamm_V1beta1_MsgSwapExactAmountInResponse

  @Sendable func swapExactAmountOut(
    request: Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Gamm_V1beta1_MsgSwapExactAmountOutResponse

  @Sendable func joinSwapExternAmountIn(
    request: Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountInResponse

  @Sendable func joinSwapShareAmountOut(
    request: Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOutResponse

  @Sendable func exitSwapExternAmountOut(
    request: Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOutResponse

  @Sendable func exitSwapShareAmountIn(
    request: Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn,
    context: GRPCAsyncServerCallContext
  ) async throws -> Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountInResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Osmosis_Gamm_V1beta1_MsgAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Osmosis_Gamm_V1beta1_MsgServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Osmosis_Gamm_V1beta1_MsgServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Osmosis_Gamm_V1beta1_MsgServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "JoinPool":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgJoinPool>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgJoinPoolResponse>(),
        interceptors: self.interceptors?.makeJoinPoolInterceptors() ?? [],
        wrapping: self.joinPool(request:context:)
      )

    case "ExitPool":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgExitPool>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgExitPoolResponse>(),
        interceptors: self.interceptors?.makeExitPoolInterceptors() ?? [],
        wrapping: self.exitPool(request:context:)
      )

    case "SwapExactAmountIn":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgSwapExactAmountInResponse>(),
        interceptors: self.interceptors?.makeSwapExactAmountInInterceptors() ?? [],
        wrapping: self.swapExactAmountIn(request:context:)
      )

    case "SwapExactAmountOut":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgSwapExactAmountOutResponse>(),
        interceptors: self.interceptors?.makeSwapExactAmountOutInterceptors() ?? [],
        wrapping: self.swapExactAmountOut(request:context:)
      )

    case "JoinSwapExternAmountIn":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountInResponse>(),
        interceptors: self.interceptors?.makeJoinSwapExternAmountInInterceptors() ?? [],
        wrapping: self.joinSwapExternAmountIn(request:context:)
      )

    case "JoinSwapShareAmountOut":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOutResponse>(),
        interceptors: self.interceptors?.makeJoinSwapShareAmountOutInterceptors() ?? [],
        wrapping: self.joinSwapShareAmountOut(request:context:)
      )

    case "ExitSwapExternAmountOut":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOutResponse>(),
        interceptors: self.interceptors?.makeExitSwapExternAmountOutInterceptors() ?? [],
        wrapping: self.exitSwapExternAmountOut(request:context:)
      )

    case "ExitSwapShareAmountIn":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn>(),
        responseSerializer: ProtobufSerializer<Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountInResponse>(),
        interceptors: self.interceptors?.makeExitSwapShareAmountInInterceptors() ?? [],
        wrapping: self.exitSwapShareAmountIn(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Osmosis_Gamm_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'joinPool'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeJoinPoolInterceptors() -> [ServerInterceptor<Osmosis_Gamm_V1beta1_MsgJoinPool, Osmosis_Gamm_V1beta1_MsgJoinPoolResponse>]

  /// - Returns: Interceptors to use when handling 'exitPool'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeExitPoolInterceptors() -> [ServerInterceptor<Osmosis_Gamm_V1beta1_MsgExitPool, Osmosis_Gamm_V1beta1_MsgExitPoolResponse>]

  /// - Returns: Interceptors to use when handling 'swapExactAmountIn'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSwapExactAmountInInterceptors() -> [ServerInterceptor<Osmosis_Gamm_V1beta1_MsgSwapExactAmountIn, Osmosis_Gamm_V1beta1_MsgSwapExactAmountInResponse>]

  /// - Returns: Interceptors to use when handling 'swapExactAmountOut'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSwapExactAmountOutInterceptors() -> [ServerInterceptor<Osmosis_Gamm_V1beta1_MsgSwapExactAmountOut, Osmosis_Gamm_V1beta1_MsgSwapExactAmountOutResponse>]

  /// - Returns: Interceptors to use when handling 'joinSwapExternAmountIn'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeJoinSwapExternAmountInInterceptors() -> [ServerInterceptor<Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountIn, Osmosis_Gamm_V1beta1_MsgJoinSwapExternAmountInResponse>]

  /// - Returns: Interceptors to use when handling 'joinSwapShareAmountOut'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeJoinSwapShareAmountOutInterceptors() -> [ServerInterceptor<Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOut, Osmosis_Gamm_V1beta1_MsgJoinSwapShareAmountOutResponse>]

  /// - Returns: Interceptors to use when handling 'exitSwapExternAmountOut'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeExitSwapExternAmountOutInterceptors() -> [ServerInterceptor<Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOut, Osmosis_Gamm_V1beta1_MsgExitSwapExternAmountOutResponse>]

  /// - Returns: Interceptors to use when handling 'exitSwapShareAmountIn'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeExitSwapShareAmountInInterceptors() -> [ServerInterceptor<Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountIn, Osmosis_Gamm_V1beta1_MsgExitSwapShareAmountInResponse>]
}

internal enum Osmosis_Gamm_V1beta1_MsgServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Msg",
    fullName: "osmosis.gamm.v1beta1.Msg",
    methods: [
      Osmosis_Gamm_V1beta1_MsgServerMetadata.Methods.joinPool,
      Osmosis_Gamm_V1beta1_MsgServerMetadata.Methods.exitPool,
      Osmosis_Gamm_V1beta1_MsgServerMetadata.Methods.swapExactAmountIn,
      Osmosis_Gamm_V1beta1_MsgServerMetadata.Methods.swapExactAmountOut,
      Osmosis_Gamm_V1beta1_MsgServerMetadata.Methods.joinSwapExternAmountIn,
      Osmosis_Gamm_V1beta1_MsgServerMetadata.Methods.joinSwapShareAmountOut,
      Osmosis_Gamm_V1beta1_MsgServerMetadata.Methods.exitSwapExternAmountOut,
      Osmosis_Gamm_V1beta1_MsgServerMetadata.Methods.exitSwapShareAmountIn,
    ]
  )

  internal enum Methods {
    internal static let joinPool = GRPCMethodDescriptor(
      name: "JoinPool",
      path: "/osmosis.gamm.v1beta1.Msg/JoinPool",
      type: GRPCCallType.unary
    )

    internal static let exitPool = GRPCMethodDescriptor(
      name: "ExitPool",
      path: "/osmosis.gamm.v1beta1.Msg/ExitPool",
      type: GRPCCallType.unary
    )

    internal static let swapExactAmountIn = GRPCMethodDescriptor(
      name: "SwapExactAmountIn",
      path: "/osmosis.gamm.v1beta1.Msg/SwapExactAmountIn",
      type: GRPCCallType.unary
    )

    internal static let swapExactAmountOut = GRPCMethodDescriptor(
      name: "SwapExactAmountOut",
      path: "/osmosis.gamm.v1beta1.Msg/SwapExactAmountOut",
      type: GRPCCallType.unary
    )

    internal static let joinSwapExternAmountIn = GRPCMethodDescriptor(
      name: "JoinSwapExternAmountIn",
      path: "/osmosis.gamm.v1beta1.Msg/JoinSwapExternAmountIn",
      type: GRPCCallType.unary
    )

    internal static let joinSwapShareAmountOut = GRPCMethodDescriptor(
      name: "JoinSwapShareAmountOut",
      path: "/osmosis.gamm.v1beta1.Msg/JoinSwapShareAmountOut",
      type: GRPCCallType.unary
    )

    internal static let exitSwapExternAmountOut = GRPCMethodDescriptor(
      name: "ExitSwapExternAmountOut",
      path: "/osmosis.gamm.v1beta1.Msg/ExitSwapExternAmountOut",
      type: GRPCCallType.unary
    )

    internal static let exitSwapShareAmountIn = GRPCMethodDescriptor(
      name: "ExitSwapShareAmountIn",
      path: "/osmosis.gamm.v1beta1.Msg/ExitSwapShareAmountIn",
      type: GRPCCallType.unary
    )
  }
}
