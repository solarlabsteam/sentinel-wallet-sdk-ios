//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: cosmos/staking/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Msg defines the staking Msg service.
///
/// Usage: instantiate `Cosmos_Staking_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Cosmos_Staking_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Cosmos_Staking_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func createValidator(
    _ request: Cosmos_Staking_V1beta1_MsgCreateValidator,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_MsgCreateValidator, Cosmos_Staking_V1beta1_MsgCreateValidatorResponse>

  func editValidator(
    _ request: Cosmos_Staking_V1beta1_MsgEditValidator,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_MsgEditValidator, Cosmos_Staking_V1beta1_MsgEditValidatorResponse>

  func delegate(
    _ request: Cosmos_Staking_V1beta1_MsgDelegate,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_MsgDelegate, Cosmos_Staking_V1beta1_MsgDelegateResponse>

  func beginRedelegate(
    _ request: Cosmos_Staking_V1beta1_MsgBeginRedelegate,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_MsgBeginRedelegate, Cosmos_Staking_V1beta1_MsgBeginRedelegateResponse>

  func undelegate(
    _ request: Cosmos_Staking_V1beta1_MsgUndelegate,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_MsgUndelegate, Cosmos_Staking_V1beta1_MsgUndelegateResponse>
}

extension Cosmos_Staking_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "cosmos.staking.v1beta1.Msg"
  }

  /// CreateValidator defines a method for creating a new validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateValidator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createValidator(
    _ request: Cosmos_Staking_V1beta1_MsgCreateValidator,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_MsgCreateValidator, Cosmos_Staking_V1beta1_MsgCreateValidatorResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Msg/CreateValidator",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? []
    )
  }

  /// EditValidator defines a method for editing an existing validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to EditValidator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func editValidator(
    _ request: Cosmos_Staking_V1beta1_MsgEditValidator,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_MsgEditValidator, Cosmos_Staking_V1beta1_MsgEditValidatorResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Msg/EditValidator",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? []
    )
  }

  /// Delegate defines a method for performing a delegation of coins
  /// from a delegator to a validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to Delegate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func delegate(
    _ request: Cosmos_Staking_V1beta1_MsgDelegate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_MsgDelegate, Cosmos_Staking_V1beta1_MsgDelegateResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Msg/Delegate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegateInterceptors() ?? []
    )
  }

  /// BeginRedelegate defines a method for performing a redelegation
  /// of coins from a delegator and source validator to a destination validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to BeginRedelegate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func beginRedelegate(
    _ request: Cosmos_Staking_V1beta1_MsgBeginRedelegate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_MsgBeginRedelegate, Cosmos_Staking_V1beta1_MsgBeginRedelegateResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Msg/BeginRedelegate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? []
    )
  }

  /// Undelegate defines a method for performing an undelegation from a
  /// delegate and a validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to Undelegate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func undelegate(
    _ request: Cosmos_Staking_V1beta1_MsgUndelegate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_MsgUndelegate, Cosmos_Staking_V1beta1_MsgUndelegateResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Msg/Undelegate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUndelegateInterceptors() ?? []
    )
  }
}

internal protocol Cosmos_Staking_V1beta1_MsgClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'createValidator'.
  func makeCreateValidatorInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_MsgCreateValidator, Cosmos_Staking_V1beta1_MsgCreateValidatorResponse>]

  /// - Returns: Interceptors to use when invoking 'editValidator'.
  func makeEditValidatorInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_MsgEditValidator, Cosmos_Staking_V1beta1_MsgEditValidatorResponse>]

  /// - Returns: Interceptors to use when invoking 'delegate'.
  func makeDelegateInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_MsgDelegate, Cosmos_Staking_V1beta1_MsgDelegateResponse>]

  /// - Returns: Interceptors to use when invoking 'beginRedelegate'.
  func makeBeginRedelegateInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_MsgBeginRedelegate, Cosmos_Staking_V1beta1_MsgBeginRedelegateResponse>]

  /// - Returns: Interceptors to use when invoking 'undelegate'.
  func makeUndelegateInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_MsgUndelegate, Cosmos_Staking_V1beta1_MsgUndelegateResponse>]
}

internal final class Cosmos_Staking_V1beta1_MsgClient: Cosmos_Staking_V1beta1_MsgClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Cosmos_Staking_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the cosmos.staking.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Cosmos_Staking_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the staking Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Cosmos_Staking_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Cosmos_Staking_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateValidator defines a method for creating a new validator.
  func createValidator(request: Cosmos_Staking_V1beta1_MsgCreateValidator, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmos_Staking_V1beta1_MsgCreateValidatorResponse>

  /// EditValidator defines a method for editing an existing validator.
  func editValidator(request: Cosmos_Staking_V1beta1_MsgEditValidator, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmos_Staking_V1beta1_MsgEditValidatorResponse>

  /// Delegate defines a method for performing a delegation of coins
  /// from a delegator to a validator.
  func delegate(request: Cosmos_Staking_V1beta1_MsgDelegate, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmos_Staking_V1beta1_MsgDelegateResponse>

  /// BeginRedelegate defines a method for performing a redelegation
  /// of coins from a delegator and source validator to a destination validator.
  func beginRedelegate(request: Cosmos_Staking_V1beta1_MsgBeginRedelegate, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmos_Staking_V1beta1_MsgBeginRedelegateResponse>

  /// Undelegate defines a method for performing an undelegation from a
  /// delegate and a validator.
  func undelegate(request: Cosmos_Staking_V1beta1_MsgUndelegate, context: StatusOnlyCallContext) -> EventLoopFuture<Cosmos_Staking_V1beta1_MsgUndelegateResponse>
}

extension Cosmos_Staking_V1beta1_MsgProvider {
  internal var serviceName: Substring { return "cosmos.staking.v1beta1.Msg" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateValidator":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmos_Staking_V1beta1_MsgCreateValidator>(),
        responseSerializer: ProtobufSerializer<Cosmos_Staking_V1beta1_MsgCreateValidatorResponse>(),
        interceptors: self.interceptors?.makeCreateValidatorInterceptors() ?? [],
        userFunction: self.createValidator(request:context:)
      )

    case "EditValidator":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmos_Staking_V1beta1_MsgEditValidator>(),
        responseSerializer: ProtobufSerializer<Cosmos_Staking_V1beta1_MsgEditValidatorResponse>(),
        interceptors: self.interceptors?.makeEditValidatorInterceptors() ?? [],
        userFunction: self.editValidator(request:context:)
      )

    case "Delegate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmos_Staking_V1beta1_MsgDelegate>(),
        responseSerializer: ProtobufSerializer<Cosmos_Staking_V1beta1_MsgDelegateResponse>(),
        interceptors: self.interceptors?.makeDelegateInterceptors() ?? [],
        userFunction: self.delegate(request:context:)
      )

    case "BeginRedelegate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmos_Staking_V1beta1_MsgBeginRedelegate>(),
        responseSerializer: ProtobufSerializer<Cosmos_Staking_V1beta1_MsgBeginRedelegateResponse>(),
        interceptors: self.interceptors?.makeBeginRedelegateInterceptors() ?? [],
        userFunction: self.beginRedelegate(request:context:)
      )

    case "Undelegate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Cosmos_Staking_V1beta1_MsgUndelegate>(),
        responseSerializer: ProtobufSerializer<Cosmos_Staking_V1beta1_MsgUndelegateResponse>(),
        interceptors: self.interceptors?.makeUndelegateInterceptors() ?? [],
        userFunction: self.undelegate(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Cosmos_Staking_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'createValidator'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateValidatorInterceptors() -> [ServerInterceptor<Cosmos_Staking_V1beta1_MsgCreateValidator, Cosmos_Staking_V1beta1_MsgCreateValidatorResponse>]

  /// - Returns: Interceptors to use when handling 'editValidator'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEditValidatorInterceptors() -> [ServerInterceptor<Cosmos_Staking_V1beta1_MsgEditValidator, Cosmos_Staking_V1beta1_MsgEditValidatorResponse>]

  /// - Returns: Interceptors to use when handling 'delegate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDelegateInterceptors() -> [ServerInterceptor<Cosmos_Staking_V1beta1_MsgDelegate, Cosmos_Staking_V1beta1_MsgDelegateResponse>]

  /// - Returns: Interceptors to use when handling 'beginRedelegate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBeginRedelegateInterceptors() -> [ServerInterceptor<Cosmos_Staking_V1beta1_MsgBeginRedelegate, Cosmos_Staking_V1beta1_MsgBeginRedelegateResponse>]

  /// - Returns: Interceptors to use when handling 'undelegate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUndelegateInterceptors() -> [ServerInterceptor<Cosmos_Staking_V1beta1_MsgUndelegate, Cosmos_Staking_V1beta1_MsgUndelegateResponse>]
}
