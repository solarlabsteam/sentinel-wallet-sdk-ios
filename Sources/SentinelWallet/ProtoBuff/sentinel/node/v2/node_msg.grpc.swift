//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: sentinel/node/v2/msg.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Sentinel_Node_V2_MsgServiceClient`, then call methods of this protocol to make API calls.
internal protocol Sentinel_Node_V2_MsgServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Sentinel_Node_V2_MsgServiceClientInterceptorFactoryProtocol? { get }

  func msgRegister(
    _ request: Sentinel_Node_V2_MsgRegisterRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Sentinel_Node_V2_MsgRegisterRequest, Sentinel_Node_V2_MsgRegisterResponse>

  func msgUpdateDetails(
    _ request: Sentinel_Node_V2_MsgUpdateDetailsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Sentinel_Node_V2_MsgUpdateDetailsRequest, Sentinel_Node_V2_MsgUpdateDetailsResponse>

  func msgUpdateStatus(
    _ request: Sentinel_Node_V2_MsgUpdateStatusRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Sentinel_Node_V2_MsgUpdateStatusRequest, Sentinel_Node_V2_MsgUpdateStatusResponse>

  func msgSubscribe(
    _ request: Sentinel_Node_V2_MsgSubscribeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Sentinel_Node_V2_MsgSubscribeRequest, Sentinel_Node_V2_MsgSubscribeResponse>
}

extension Sentinel_Node_V2_MsgServiceClientProtocol {
  internal var serviceName: String {
    return "sentinel.node.v2.MsgService"
  }

  /// Unary call to MsgRegister
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgRegister.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgRegister(
    _ request: Sentinel_Node_V2_MsgRegisterRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Sentinel_Node_V2_MsgRegisterRequest, Sentinel_Node_V2_MsgRegisterResponse> {
    return self.makeUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgRegister.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgRegisterInterceptors() ?? []
    )
  }

  /// Unary call to MsgUpdateDetails
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgUpdateDetails.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgUpdateDetails(
    _ request: Sentinel_Node_V2_MsgUpdateDetailsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Sentinel_Node_V2_MsgUpdateDetailsRequest, Sentinel_Node_V2_MsgUpdateDetailsResponse> {
    return self.makeUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgUpdateDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgUpdateDetailsInterceptors() ?? []
    )
  }

  /// Unary call to MsgUpdateStatus
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgUpdateStatus.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgUpdateStatus(
    _ request: Sentinel_Node_V2_MsgUpdateStatusRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Sentinel_Node_V2_MsgUpdateStatusRequest, Sentinel_Node_V2_MsgUpdateStatusResponse> {
    return self.makeUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgUpdateStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgUpdateStatusInterceptors() ?? []
    )
  }

  /// Unary call to MsgSubscribe
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgSubscribe.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgSubscribe(
    _ request: Sentinel_Node_V2_MsgSubscribeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Sentinel_Node_V2_MsgSubscribeRequest, Sentinel_Node_V2_MsgSubscribeResponse> {
    return self.makeUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgSubscribe.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgSubscribeInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Sentinel_Node_V2_MsgServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Sentinel_Node_V2_MsgServiceNIOClient")
internal final class Sentinel_Node_V2_MsgServiceClient: Sentinel_Node_V2_MsgServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Sentinel_Node_V2_MsgServiceClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Sentinel_Node_V2_MsgServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the sentinel.node.v2.MsgService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Sentinel_Node_V2_MsgServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Sentinel_Node_V2_MsgServiceNIOClient: Sentinel_Node_V2_MsgServiceClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Sentinel_Node_V2_MsgServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the sentinel.node.v2.MsgService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Sentinel_Node_V2_MsgServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Sentinel_Node_V2_MsgServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Sentinel_Node_V2_MsgServiceClientInterceptorFactoryProtocol? { get }

  func makeMsgRegisterCall(
    _ request: Sentinel_Node_V2_MsgRegisterRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Sentinel_Node_V2_MsgRegisterRequest, Sentinel_Node_V2_MsgRegisterResponse>

  func makeMsgUpdateDetailsCall(
    _ request: Sentinel_Node_V2_MsgUpdateDetailsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Sentinel_Node_V2_MsgUpdateDetailsRequest, Sentinel_Node_V2_MsgUpdateDetailsResponse>

  func makeMsgUpdateStatusCall(
    _ request: Sentinel_Node_V2_MsgUpdateStatusRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Sentinel_Node_V2_MsgUpdateStatusRequest, Sentinel_Node_V2_MsgUpdateStatusResponse>

  func makeMsgSubscribeCall(
    _ request: Sentinel_Node_V2_MsgSubscribeRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Sentinel_Node_V2_MsgSubscribeRequest, Sentinel_Node_V2_MsgSubscribeResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Sentinel_Node_V2_MsgServiceAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Sentinel_Node_V2_MsgServiceClientMetadata.serviceDescriptor
  }

  internal var interceptors: Sentinel_Node_V2_MsgServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeMsgRegisterCall(
    _ request: Sentinel_Node_V2_MsgRegisterRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Sentinel_Node_V2_MsgRegisterRequest, Sentinel_Node_V2_MsgRegisterResponse> {
    return self.makeAsyncUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgRegister.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgRegisterInterceptors() ?? []
    )
  }

  internal func makeMsgUpdateDetailsCall(
    _ request: Sentinel_Node_V2_MsgUpdateDetailsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Sentinel_Node_V2_MsgUpdateDetailsRequest, Sentinel_Node_V2_MsgUpdateDetailsResponse> {
    return self.makeAsyncUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgUpdateDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgUpdateDetailsInterceptors() ?? []
    )
  }

  internal func makeMsgUpdateStatusCall(
    _ request: Sentinel_Node_V2_MsgUpdateStatusRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Sentinel_Node_V2_MsgUpdateStatusRequest, Sentinel_Node_V2_MsgUpdateStatusResponse> {
    return self.makeAsyncUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgUpdateStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgUpdateStatusInterceptors() ?? []
    )
  }

  internal func makeMsgSubscribeCall(
    _ request: Sentinel_Node_V2_MsgSubscribeRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Sentinel_Node_V2_MsgSubscribeRequest, Sentinel_Node_V2_MsgSubscribeResponse> {
    return self.makeAsyncUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgSubscribe.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgSubscribeInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Sentinel_Node_V2_MsgServiceAsyncClientProtocol {
  internal func msgRegister(
    _ request: Sentinel_Node_V2_MsgRegisterRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Sentinel_Node_V2_MsgRegisterResponse {
    return try await self.performAsyncUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgRegister.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgRegisterInterceptors() ?? []
    )
  }

  internal func msgUpdateDetails(
    _ request: Sentinel_Node_V2_MsgUpdateDetailsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Sentinel_Node_V2_MsgUpdateDetailsResponse {
    return try await self.performAsyncUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgUpdateDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgUpdateDetailsInterceptors() ?? []
    )
  }

  internal func msgUpdateStatus(
    _ request: Sentinel_Node_V2_MsgUpdateStatusRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Sentinel_Node_V2_MsgUpdateStatusResponse {
    return try await self.performAsyncUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgUpdateStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgUpdateStatusInterceptors() ?? []
    )
  }

  internal func msgSubscribe(
    _ request: Sentinel_Node_V2_MsgSubscribeRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Sentinel_Node_V2_MsgSubscribeResponse {
    return try await self.performAsyncUnaryCall(
      path: Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgSubscribe.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgSubscribeInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Sentinel_Node_V2_MsgServiceAsyncClient: Sentinel_Node_V2_MsgServiceAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Sentinel_Node_V2_MsgServiceClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Sentinel_Node_V2_MsgServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Sentinel_Node_V2_MsgServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'msgRegister'.
  func makeMsgRegisterInterceptors() -> [ClientInterceptor<Sentinel_Node_V2_MsgRegisterRequest, Sentinel_Node_V2_MsgRegisterResponse>]

  /// - Returns: Interceptors to use when invoking 'msgUpdateDetails'.
  func makeMsgUpdateDetailsInterceptors() -> [ClientInterceptor<Sentinel_Node_V2_MsgUpdateDetailsRequest, Sentinel_Node_V2_MsgUpdateDetailsResponse>]

  /// - Returns: Interceptors to use when invoking 'msgUpdateStatus'.
  func makeMsgUpdateStatusInterceptors() -> [ClientInterceptor<Sentinel_Node_V2_MsgUpdateStatusRequest, Sentinel_Node_V2_MsgUpdateStatusResponse>]

  /// - Returns: Interceptors to use when invoking 'msgSubscribe'.
  func makeMsgSubscribeInterceptors() -> [ClientInterceptor<Sentinel_Node_V2_MsgSubscribeRequest, Sentinel_Node_V2_MsgSubscribeResponse>]
}

internal enum Sentinel_Node_V2_MsgServiceClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "MsgService",
    fullName: "sentinel.node.v2.MsgService",
    methods: [
      Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgRegister,
      Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgUpdateDetails,
      Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgUpdateStatus,
      Sentinel_Node_V2_MsgServiceClientMetadata.Methods.msgSubscribe,
    ]
  )

  internal enum Methods {
    internal static let msgRegister = GRPCMethodDescriptor(
      name: "MsgRegister",
      path: "/sentinel.node.v2.MsgService/MsgRegister",
      type: GRPCCallType.unary
    )

    internal static let msgUpdateDetails = GRPCMethodDescriptor(
      name: "MsgUpdateDetails",
      path: "/sentinel.node.v2.MsgService/MsgUpdateDetails",
      type: GRPCCallType.unary
    )

    internal static let msgUpdateStatus = GRPCMethodDescriptor(
      name: "MsgUpdateStatus",
      path: "/sentinel.node.v2.MsgService/MsgUpdateStatus",
      type: GRPCCallType.unary
    )

    internal static let msgSubscribe = GRPCMethodDescriptor(
      name: "MsgSubscribe",
      path: "/sentinel.node.v2.MsgService/MsgSubscribe",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Sentinel_Node_V2_MsgServiceProvider: CallHandlerProvider {
  var interceptors: Sentinel_Node_V2_MsgServiceServerInterceptorFactoryProtocol? { get }

  func msgRegister(request: Sentinel_Node_V2_MsgRegisterRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Sentinel_Node_V2_MsgRegisterResponse>

  func msgUpdateDetails(request: Sentinel_Node_V2_MsgUpdateDetailsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Sentinel_Node_V2_MsgUpdateDetailsResponse>

  func msgUpdateStatus(request: Sentinel_Node_V2_MsgUpdateStatusRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Sentinel_Node_V2_MsgUpdateStatusResponse>

  func msgSubscribe(request: Sentinel_Node_V2_MsgSubscribeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Sentinel_Node_V2_MsgSubscribeResponse>
}

extension Sentinel_Node_V2_MsgServiceProvider {
  internal var serviceName: Substring {
    return Sentinel_Node_V2_MsgServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "MsgRegister":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Node_V2_MsgRegisterRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Node_V2_MsgRegisterResponse>(),
        interceptors: self.interceptors?.makeMsgRegisterInterceptors() ?? [],
        userFunction: self.msgRegister(request:context:)
      )

    case "MsgUpdateDetails":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Node_V2_MsgUpdateDetailsRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Node_V2_MsgUpdateDetailsResponse>(),
        interceptors: self.interceptors?.makeMsgUpdateDetailsInterceptors() ?? [],
        userFunction: self.msgUpdateDetails(request:context:)
      )

    case "MsgUpdateStatus":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Node_V2_MsgUpdateStatusRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Node_V2_MsgUpdateStatusResponse>(),
        interceptors: self.interceptors?.makeMsgUpdateStatusInterceptors() ?? [],
        userFunction: self.msgUpdateStatus(request:context:)
      )

    case "MsgSubscribe":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Node_V2_MsgSubscribeRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Node_V2_MsgSubscribeResponse>(),
        interceptors: self.interceptors?.makeMsgSubscribeInterceptors() ?? [],
        userFunction: self.msgSubscribe(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Sentinel_Node_V2_MsgServiceAsyncProvider: CallHandlerProvider, Sendable {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Sentinel_Node_V2_MsgServiceServerInterceptorFactoryProtocol? { get }

  func msgRegister(
    request: Sentinel_Node_V2_MsgRegisterRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Sentinel_Node_V2_MsgRegisterResponse

  func msgUpdateDetails(
    request: Sentinel_Node_V2_MsgUpdateDetailsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Sentinel_Node_V2_MsgUpdateDetailsResponse

  func msgUpdateStatus(
    request: Sentinel_Node_V2_MsgUpdateStatusRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Sentinel_Node_V2_MsgUpdateStatusResponse

  func msgSubscribe(
    request: Sentinel_Node_V2_MsgSubscribeRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Sentinel_Node_V2_MsgSubscribeResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Sentinel_Node_V2_MsgServiceAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Sentinel_Node_V2_MsgServiceServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Sentinel_Node_V2_MsgServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Sentinel_Node_V2_MsgServiceServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "MsgRegister":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Node_V2_MsgRegisterRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Node_V2_MsgRegisterResponse>(),
        interceptors: self.interceptors?.makeMsgRegisterInterceptors() ?? [],
        wrapping: { try await self.msgRegister(request: $0, context: $1) }
      )

    case "MsgUpdateDetails":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Node_V2_MsgUpdateDetailsRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Node_V2_MsgUpdateDetailsResponse>(),
        interceptors: self.interceptors?.makeMsgUpdateDetailsInterceptors() ?? [],
        wrapping: { try await self.msgUpdateDetails(request: $0, context: $1) }
      )

    case "MsgUpdateStatus":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Node_V2_MsgUpdateStatusRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Node_V2_MsgUpdateStatusResponse>(),
        interceptors: self.interceptors?.makeMsgUpdateStatusInterceptors() ?? [],
        wrapping: { try await self.msgUpdateStatus(request: $0, context: $1) }
      )

    case "MsgSubscribe":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Node_V2_MsgSubscribeRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Node_V2_MsgSubscribeResponse>(),
        interceptors: self.interceptors?.makeMsgSubscribeInterceptors() ?? [],
        wrapping: { try await self.msgSubscribe(request: $0, context: $1) }
      )

    default:
      return nil
    }
  }
}

internal protocol Sentinel_Node_V2_MsgServiceServerInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when handling 'msgRegister'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgRegisterInterceptors() -> [ServerInterceptor<Sentinel_Node_V2_MsgRegisterRequest, Sentinel_Node_V2_MsgRegisterResponse>]

  /// - Returns: Interceptors to use when handling 'msgUpdateDetails'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgUpdateDetailsInterceptors() -> [ServerInterceptor<Sentinel_Node_V2_MsgUpdateDetailsRequest, Sentinel_Node_V2_MsgUpdateDetailsResponse>]

  /// - Returns: Interceptors to use when handling 'msgUpdateStatus'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgUpdateStatusInterceptors() -> [ServerInterceptor<Sentinel_Node_V2_MsgUpdateStatusRequest, Sentinel_Node_V2_MsgUpdateStatusResponse>]

  /// - Returns: Interceptors to use when handling 'msgSubscribe'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgSubscribeInterceptors() -> [ServerInterceptor<Sentinel_Node_V2_MsgSubscribeRequest, Sentinel_Node_V2_MsgSubscribeResponse>]
}

internal enum Sentinel_Node_V2_MsgServiceServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "MsgService",
    fullName: "sentinel.node.v2.MsgService",
    methods: [
      Sentinel_Node_V2_MsgServiceServerMetadata.Methods.msgRegister,
      Sentinel_Node_V2_MsgServiceServerMetadata.Methods.msgUpdateDetails,
      Sentinel_Node_V2_MsgServiceServerMetadata.Methods.msgUpdateStatus,
      Sentinel_Node_V2_MsgServiceServerMetadata.Methods.msgSubscribe,
    ]
  )

  internal enum Methods {
    internal static let msgRegister = GRPCMethodDescriptor(
      name: "MsgRegister",
      path: "/sentinel.node.v2.MsgService/MsgRegister",
      type: GRPCCallType.unary
    )

    internal static let msgUpdateDetails = GRPCMethodDescriptor(
      name: "MsgUpdateDetails",
      path: "/sentinel.node.v2.MsgService/MsgUpdateDetails",
      type: GRPCCallType.unary
    )

    internal static let msgUpdateStatus = GRPCMethodDescriptor(
      name: "MsgUpdateStatus",
      path: "/sentinel.node.v2.MsgService/MsgUpdateStatus",
      type: GRPCCallType.unary
    )

    internal static let msgSubscribe = GRPCMethodDescriptor(
      name: "MsgSubscribe",
      path: "/sentinel.node.v2.MsgService/MsgSubscribe",
      type: GRPCCallType.unary
    )
  }
}
