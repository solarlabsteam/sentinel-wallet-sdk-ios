//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: sentinel/deposit/v1/querier.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Sentinel_Deposit_V1_QueryServiceClient`, then call methods of this protocol to make API calls.
internal protocol Sentinel_Deposit_V1_QueryServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Sentinel_Deposit_V1_QueryServiceClientInterceptorFactoryProtocol? { get }

  func queryDeposits(
    _ request: Sentinel_Deposit_V1_QueryDepositsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Sentinel_Deposit_V1_QueryDepositsRequest, Sentinel_Deposit_V1_QueryDepositsResponse>

  func queryDeposit(
    _ request: Sentinel_Deposit_V1_QueryDepositRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Sentinel_Deposit_V1_QueryDepositRequest, Sentinel_Deposit_V1_QueryDepositResponse>
}

extension Sentinel_Deposit_V1_QueryServiceClientProtocol {
  internal var serviceName: String {
    return "sentinel.deposit.v1.QueryService"
  }

  /// Unary call to QueryDeposits
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryDeposits.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryDeposits(
    _ request: Sentinel_Deposit_V1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Sentinel_Deposit_V1_QueryDepositsRequest, Sentinel_Deposit_V1_QueryDepositsResponse> {
    return self.makeUnaryCall(
      path: Sentinel_Deposit_V1_QueryServiceClientMetadata.Methods.queryDeposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryDepositsInterceptors() ?? []
    )
  }

  /// Unary call to QueryDeposit
  ///
  /// - Parameters:
  ///   - request: Request to send to QueryDeposit.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func queryDeposit(
    _ request: Sentinel_Deposit_V1_QueryDepositRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Sentinel_Deposit_V1_QueryDepositRequest, Sentinel_Deposit_V1_QueryDepositResponse> {
    return self.makeUnaryCall(
      path: Sentinel_Deposit_V1_QueryServiceClientMetadata.Methods.queryDeposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryDepositInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Sentinel_Deposit_V1_QueryServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Sentinel_Deposit_V1_QueryServiceNIOClient")
internal final class Sentinel_Deposit_V1_QueryServiceClient: Sentinel_Deposit_V1_QueryServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Sentinel_Deposit_V1_QueryServiceClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Sentinel_Deposit_V1_QueryServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the sentinel.deposit.v1.QueryService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Sentinel_Deposit_V1_QueryServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Sentinel_Deposit_V1_QueryServiceNIOClient: Sentinel_Deposit_V1_QueryServiceClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Sentinel_Deposit_V1_QueryServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the sentinel.deposit.v1.QueryService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Sentinel_Deposit_V1_QueryServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Sentinel_Deposit_V1_QueryServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Sentinel_Deposit_V1_QueryServiceClientInterceptorFactoryProtocol? { get }

  func makeQueryDepositsCall(
    _ request: Sentinel_Deposit_V1_QueryDepositsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Sentinel_Deposit_V1_QueryDepositsRequest, Sentinel_Deposit_V1_QueryDepositsResponse>

  func makeQueryDepositCall(
    _ request: Sentinel_Deposit_V1_QueryDepositRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Sentinel_Deposit_V1_QueryDepositRequest, Sentinel_Deposit_V1_QueryDepositResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Sentinel_Deposit_V1_QueryServiceAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Sentinel_Deposit_V1_QueryServiceClientMetadata.serviceDescriptor
  }

  internal var interceptors: Sentinel_Deposit_V1_QueryServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeQueryDepositsCall(
    _ request: Sentinel_Deposit_V1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Sentinel_Deposit_V1_QueryDepositsRequest, Sentinel_Deposit_V1_QueryDepositsResponse> {
    return self.makeAsyncUnaryCall(
      path: Sentinel_Deposit_V1_QueryServiceClientMetadata.Methods.queryDeposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryDepositsInterceptors() ?? []
    )
  }

  internal func makeQueryDepositCall(
    _ request: Sentinel_Deposit_V1_QueryDepositRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Sentinel_Deposit_V1_QueryDepositRequest, Sentinel_Deposit_V1_QueryDepositResponse> {
    return self.makeAsyncUnaryCall(
      path: Sentinel_Deposit_V1_QueryServiceClientMetadata.Methods.queryDeposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryDepositInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Sentinel_Deposit_V1_QueryServiceAsyncClientProtocol {
  internal func queryDeposits(
    _ request: Sentinel_Deposit_V1_QueryDepositsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Sentinel_Deposit_V1_QueryDepositsResponse {
    return try await self.performAsyncUnaryCall(
      path: Sentinel_Deposit_V1_QueryServiceClientMetadata.Methods.queryDeposits.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryDepositsInterceptors() ?? []
    )
  }

  internal func queryDeposit(
    _ request: Sentinel_Deposit_V1_QueryDepositRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Sentinel_Deposit_V1_QueryDepositResponse {
    return try await self.performAsyncUnaryCall(
      path: Sentinel_Deposit_V1_QueryServiceClientMetadata.Methods.queryDeposit.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeQueryDepositInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Sentinel_Deposit_V1_QueryServiceAsyncClient: Sentinel_Deposit_V1_QueryServiceAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Sentinel_Deposit_V1_QueryServiceClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Sentinel_Deposit_V1_QueryServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Sentinel_Deposit_V1_QueryServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'queryDeposits'.
  func makeQueryDepositsInterceptors() -> [ClientInterceptor<Sentinel_Deposit_V1_QueryDepositsRequest, Sentinel_Deposit_V1_QueryDepositsResponse>]

  /// - Returns: Interceptors to use when invoking 'queryDeposit'.
  func makeQueryDepositInterceptors() -> [ClientInterceptor<Sentinel_Deposit_V1_QueryDepositRequest, Sentinel_Deposit_V1_QueryDepositResponse>]
}

internal enum Sentinel_Deposit_V1_QueryServiceClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "QueryService",
    fullName: "sentinel.deposit.v1.QueryService",
    methods: [
      Sentinel_Deposit_V1_QueryServiceClientMetadata.Methods.queryDeposits,
      Sentinel_Deposit_V1_QueryServiceClientMetadata.Methods.queryDeposit,
    ]
  )

  internal enum Methods {
    internal static let queryDeposits = GRPCMethodDescriptor(
      name: "QueryDeposits",
      path: "/sentinel.deposit.v1.QueryService/QueryDeposits",
      type: GRPCCallType.unary
    )

    internal static let queryDeposit = GRPCMethodDescriptor(
      name: "QueryDeposit",
      path: "/sentinel.deposit.v1.QueryService/QueryDeposit",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Sentinel_Deposit_V1_QueryServiceProvider: CallHandlerProvider {
  var interceptors: Sentinel_Deposit_V1_QueryServiceServerInterceptorFactoryProtocol? { get }

  func queryDeposits(request: Sentinel_Deposit_V1_QueryDepositsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Sentinel_Deposit_V1_QueryDepositsResponse>

  func queryDeposit(request: Sentinel_Deposit_V1_QueryDepositRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Sentinel_Deposit_V1_QueryDepositResponse>
}

extension Sentinel_Deposit_V1_QueryServiceProvider {
  internal var serviceName: Substring {
    return Sentinel_Deposit_V1_QueryServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "QueryDeposits":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Deposit_V1_QueryDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Deposit_V1_QueryDepositsResponse>(),
        interceptors: self.interceptors?.makeQueryDepositsInterceptors() ?? [],
        userFunction: self.queryDeposits(request:context:)
      )

    case "QueryDeposit":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Deposit_V1_QueryDepositRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Deposit_V1_QueryDepositResponse>(),
        interceptors: self.interceptors?.makeQueryDepositInterceptors() ?? [],
        userFunction: self.queryDeposit(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Sentinel_Deposit_V1_QueryServiceAsyncProvider: CallHandlerProvider, Sendable {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Sentinel_Deposit_V1_QueryServiceServerInterceptorFactoryProtocol? { get }

  func queryDeposits(
    request: Sentinel_Deposit_V1_QueryDepositsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Sentinel_Deposit_V1_QueryDepositsResponse

  func queryDeposit(
    request: Sentinel_Deposit_V1_QueryDepositRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Sentinel_Deposit_V1_QueryDepositResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Sentinel_Deposit_V1_QueryServiceAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Sentinel_Deposit_V1_QueryServiceServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Sentinel_Deposit_V1_QueryServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Sentinel_Deposit_V1_QueryServiceServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "QueryDeposits":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Deposit_V1_QueryDepositsRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Deposit_V1_QueryDepositsResponse>(),
        interceptors: self.interceptors?.makeQueryDepositsInterceptors() ?? [],
        wrapping: { try await self.queryDeposits(request: $0, context: $1) }
      )

    case "QueryDeposit":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Sentinel_Deposit_V1_QueryDepositRequest>(),
        responseSerializer: ProtobufSerializer<Sentinel_Deposit_V1_QueryDepositResponse>(),
        interceptors: self.interceptors?.makeQueryDepositInterceptors() ?? [],
        wrapping: { try await self.queryDeposit(request: $0, context: $1) }
      )

    default:
      return nil
    }
  }
}

internal protocol Sentinel_Deposit_V1_QueryServiceServerInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when handling 'queryDeposits'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryDepositsInterceptors() -> [ServerInterceptor<Sentinel_Deposit_V1_QueryDepositsRequest, Sentinel_Deposit_V1_QueryDepositsResponse>]

  /// - Returns: Interceptors to use when handling 'queryDeposit'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeQueryDepositInterceptors() -> [ServerInterceptor<Sentinel_Deposit_V1_QueryDepositRequest, Sentinel_Deposit_V1_QueryDepositResponse>]
}

internal enum Sentinel_Deposit_V1_QueryServiceServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "QueryService",
    fullName: "sentinel.deposit.v1.QueryService",
    methods: [
      Sentinel_Deposit_V1_QueryServiceServerMetadata.Methods.queryDeposits,
      Sentinel_Deposit_V1_QueryServiceServerMetadata.Methods.queryDeposit,
    ]
  )

  internal enum Methods {
    internal static let queryDeposits = GRPCMethodDescriptor(
      name: "QueryDeposits",
      path: "/sentinel.deposit.v1.QueryService/QueryDeposits",
      type: GRPCCallType.unary
    )

    internal static let queryDeposit = GRPCMethodDescriptor(
      name: "QueryDeposit",
      path: "/sentinel.deposit.v1.QueryService/QueryDeposit",
      type: GRPCCallType.unary
    )
  }
}
